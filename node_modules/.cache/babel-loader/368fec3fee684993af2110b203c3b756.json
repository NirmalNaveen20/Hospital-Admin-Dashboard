{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _utils = require(\"./utils\");\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  var _element$selectionSta, _element$selectionEnd;\n\n  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if ((0, _utils.isDisabled)(element)) {\n    return;\n  } // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n\n  const elementType = element.type;\n\n  if (elementType !== 'textarea') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    ;\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta :\n    /* istanbul ignore next */\n    undefined,\n    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd :\n    /* istanbul ignore next */\n    undefined\n  });\n\n  if (elementType !== 'textarea') {\n    ;\n    element.type = elementType;\n  }\n}","map":{"version":3,"sources":["/Users/nirmalnaveen/Desktop/MERN Projects/ecom/ecommerce-dashboard-starter/node_modules/@testing-library/user-event/dist/clear.js"],"names":["Object","defineProperty","exports","value","clear","_utils","require","_type","element","_element$selectionSta","_element$selectionEnd","isElementType","Error","isDisabled","elementType","type","delay","initialSelectionStart","selectionStart","undefined","initialSelectionEnd","selectionEnd"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgBA,KAAhB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASF,KAAT,CAAeI,OAAf,EAAwB;AACtB,MAAIC,qBAAJ,EAA2BC,qBAA3B;;AAEA,MAAI,CAAC,CAAC,GAAGL,MAAM,CAACM,aAAX,EAA0BH,OAA1B,EAAmC,CAAC,OAAD,EAAU,UAAV,CAAnC,CAAL,EAAgE;AAC9D;AACA,UAAM,IAAII,KAAJ,CAAU,4DAAV,CAAN;AACD;;AAED,MAAI,CAAC,GAAGP,MAAM,CAACQ,UAAX,EAAuBL,OAAvB,CAAJ,EAAqC;AACnC;AACD,GAVqB,CAUpB;AACF;;;AAGA,QAAMM,WAAW,GAAGN,OAAO,CAACO,IAA5B;;AAEA,MAAID,WAAW,KAAK,UAApB,EAAgC;AAC9B;AACA;AACAN,IAAAA,OAAO,CAACO,IAAR,GAAe,MAAf;AACD;;AAED,GAAC,GAAGR,KAAK,CAACQ,IAAV,EAAgBP,OAAhB,EAAyB,kBAAzB,EAA6C;AAC3CQ,IAAAA,KAAK,EAAE,CADoC;AAE3CC,IAAAA,qBAAqB,EAAE,CAACR,qBAAqB,GAAGD,OAAO,CAACU,cAAjC,KAAoD,IAApD,GAA2DT,qBAA3D;AACvB;AACAU,IAAAA,SAJ2C;AAK3CC,IAAAA,mBAAmB,EAAE,CAACV,qBAAqB,GAAGF,OAAO,CAACa,YAAjC,KAAkD,IAAlD,GAAyDX,qBAAzD;AACrB;AACAS,IAAAA;AAP2C,GAA7C;;AAUA,MAAIL,WAAW,KAAK,UAApB,EAAgC;AAC9B;AACAN,IAAAA,OAAO,CAACO,IAAR,GAAeD,WAAf;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\n\nvar _utils = require(\"./utils\");\n\nvar _type = require(\"./type\");\n\nfunction clear(element) {\n  var _element$selectionSta, _element$selectionEnd;\n\n  if (!(0, _utils.isElementType)(element, ['input', 'textarea'])) {\n    // TODO: support contenteditable\n    throw new Error('clear currently only supports input and textarea elements.');\n  }\n\n  if ((0, _utils.isDisabled)(element)) {\n    return;\n  } // TODO: track the selection range ourselves so we don't have to do this input \"type\" trickery\n  // just like cypress does: https://github.com/cypress-io/cypress/blob/8d7f1a0bedc3c45a2ebf1ff50324b34129fdc683/packages/driver/src/dom/selection.ts#L16-L37\n\n\n  const elementType = element.type;\n\n  if (elementType !== 'textarea') {\n    // setSelectionRange is not supported on certain types of inputs, e.g. \"number\" or \"email\"\n    ;\n    element.type = 'text';\n  }\n\n  (0, _type.type)(element, '{selectall}{del}', {\n    delay: 0,\n    initialSelectionStart: (_element$selectionSta = element.selectionStart) != null ? _element$selectionSta :\n    /* istanbul ignore next */\n    undefined,\n    initialSelectionEnd: (_element$selectionEnd = element.selectionEnd) != null ? _element$selectionEnd :\n    /* istanbul ignore next */\n    undefined\n  });\n\n  if (elementType !== 'textarea') {\n    ;\n    element.type = elementType;\n  }\n}"]},"metadata":{},"sourceType":"script"}